enumerate () - used when you want index and character both
join() - used to add a string to every element in list
map() - to run a function in every element of list and return a new list
filter() - returns list element if condition satisfied
reduce () - add multifly every element
F-string - to give variables on string - baaki net se dekh lena, mst h
    ex - print(f"asdfasd {variable1} adsf {variable2} adsf")
         print("asd {} asdf {}".format(variable1, variable2))
 
# a = function()     -     alls the function for value
# a = function       -     assigns the function to new variable. eg: a() calls the function
# seedhi baat function (without paranthesis) gives the function address which could be assigned to new variable or could be changed too. see decorator.

del fuction - to delete function

DECORATER :- an easy way to send a function as an argument to another function and assigning the return value to that
             function, it can be a new function. see example : Decorator.py

### .__dict__ is used to see details a class or its instances.


### Split :- A sting could be splitted to list by one sting in between
 ex:  a = "SHREY_IS_A_GOOD_BOY" ->   l = a.split("_")  ->  l = [SHREY,IS,A,GOOD,BOY]   

########    Maan lo apne pass ek list h jiske saare elements apan ko ek function ko as a parameter dene h
            to, bhai bs ek start laga do. example ke liye alternative Constructor.py waala code dekho
            yaa lo yaar tum bhi kya yaad rahoge : func(*list)

            
### ELSE WITH FOR LOOP EXECUTES WHEN LOOP ENDS NORMALLY. IF LOOP BREAKS IN BETWEEN, ELSE WON'T WORK ###

# Difference between array and list : list can store any kind of data while array holds specific type of data only.
# Array : we can use array in python by importing it. array(data type, value list):- This function is used to create an 
          array with data type and value list specified in its arguments. Some data types are mentioned in the table below.
Type _Code	        C_Type	                   Python_Type	                       Minimum_size_in_Bytes
    ‘b’	          signed char	                   int	                                     1
    ‘B’	          unsigned char	                   int	                                     1
    ‘u’	          Py_UNICODE	                   unicode character	                     2
    ‘h’	          signed short	                   int	                                     2
    ‘H’	          unsigned short	               int	                                     2
    ‘i’	          signed int	                   int	                                     2
    ‘I’	          unsigned int	                   int	                                     2
    ‘l’	          signed long	                   int	                                     4
    ‘L’	          unsigned long	                   int	                                     4
    ‘q’	          signed long long	               int	                                     8
    ‘Q’	          unsigned long long	           int	                                     8
    ‘f’	          float	                           float	                                 4
    ‘d’	          double	                       float	                                 8

    *** Difference between signed and unsigned: signed includes both positive and negative values. while unsigned 
        only includes positive values(starting from 0)***


# *args and *kwargs : are used to take as many argumets as you want. study about it.
# To make a function arguments optional, just assign them a value in parameters(formal parameters) only see linkedlist.py 
  for example.